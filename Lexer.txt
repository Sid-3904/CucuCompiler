TYPE : int
ID : x
ASSIGN : =
NUM : 10
SEMI : ;
TYPE : int
ID : y
ASSIGN : =
L_RD_BRACKET : (
NUM : 20
PLUS : +
ID : x
R_RD_BRACKET : )
DIV : /
NUM : 3
SEMI : ;
TYPE : char *
ID : message
ASSIGN : =
TYPE : string "This is a sample message"
SEMI : ;
TYPE : int
ID : add
L_RD_BRACKET : (
TYPE : int
ID : a
COMMA : ,
TYPE : int
ID : b
R_RD_BRACKET : )
L_CL_BRACKET : {
RETURN
ID : a
PLUS : +
ID : b
SEMI : ;
R_CL_BRACKET : }
TYPE : char *
ID : print_message
L_RD_BRACKET : (
TYPE : char *
ID : msg
R_RD_BRACKET : )
L_CL_BRACKET : {
ID : printf
L_RD_BRACKET : (
ID : msg
R_RD_BRACKET : )
SEMI : ;
R_CL_BRACKET : }
